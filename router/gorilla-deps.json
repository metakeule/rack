{
  "Path": "github.com/gorilla/mux",
  "Exports": {
    "*Route.BuildOnly": "(*Route) BuildOnly() *Route",
    "*Route.GetError": "(*Route) GetError() error",
    "*Route.GetHandler": "(*Route) GetHandler() http.Handler",
    "*Route.GetName": "(*Route) GetName() string",
    "*Route.Handler": "(*Route) Handler(http.Handler) *Route",
    "*Route.HandlerFunc": "(*Route) HandlerFunc((http.ResponseWriter,*http.Request)) *Route",
    "*Route.Headers": "(*Route) Headers(...string) *Route",
    "*Route.Host": "(*Route) Host(string) *Route",
    "*Route.Match": "(*Route) Match(*http.Request,*RouteMatch) bool",
    "*Route.MatcherFunc": "(*Route) MatcherFunc(MatcherFunc) *Route",
    "*Route.Methods": "(*Route) Methods(...string) *Route",
    "*Route.Name": "(*Route) Name(string) *Route",
    "*Route.Path": "(*Route) Path(string) *Route",
    "*Route.PathPrefix": "(*Route) PathPrefix(string) *Route",
    "*Route.Queries": "(*Route) Queries(...string) *Route",
    "*Route.Schemes": "(*Route) Schemes(...string) *Route",
    "*Route.Subrouter": "(*Route) Subrouter() *Router",
    "*Route.URL": "(*Route) URL(...string)(*url.URL,error)",
    "*Route.URLHost": "(*Route) URLHost(...string)(*url.URL,error)",
    "*Route.URLPath": "(*Route) URLPath(...string)(*url.URL,error)",
    "*Router.Get": "(*Router) Get(string) *Route",
    "*Router.GetRoute": "(*Router) GetRoute(string) *Route",
    "*Router.Handle": "(*Router) Handle(string,http.Handler) *Route",
    "*Router.HandleFunc": "(*Router) HandleFunc(string,(http.ResponseWriter,*http.Request)) *Route",
    "*Router.Headers": "(*Router) Headers(...string) *Route",
    "*Router.Host": "(*Router) Host(string) *Route",
    "*Router.Match": "(*Router) Match(*http.Request,*RouteMatch) bool",
    "*Router.MatcherFunc": "(*Router) MatcherFunc(MatcherFunc) *Route",
    "*Router.Methods": "(*Router) Methods(...string) *Route",
    "*Router.NewRoute": "(*Router) NewRoute() *Route",
    "*Router.Path": "(*Router) Path(string) *Route",
    "*Router.PathPrefix": "(*Router) PathPrefix(string) *Route",
    "*Router.Queries": "(*Router) Queries(...string) *Route",
    "*Router.Schemes": "(*Router) Schemes(...string) *Route",
    "*Router.ServeHTTP": "(*Router) ServeHTTP(http.ResponseWriter,*http.Request)",
    "*Router.StrictSlash": "(*Router) StrictSlash(bool) *Router",
    "CurrentRoute": "CurrentRoute(*http.Request) *Route",
    "MatcherFunc": "type MatcherFunc (*http.Request,*RouteMatch) bool",
    "MatcherFunc.Match": "(MatcherFunc) Match(*http.Request,*RouteMatch) bool",
    "NewRouter": "NewRouter() *Router",
    "Route": "type Route struct{}",
    "RouteMatch": "type RouteMatch struct {;  Handler http.Handler;  Route *Route;  Vars map[string]string;}",
    "Router": "type Router struct {;  NotFoundHandler http.Handler;}",
    "Vars": "Vars(*http.Request) map[string]string"
  },
  "Imports": {
    "github.com/gorilla/context#Clear": "Clear(*http.Request)",
    "github.com/gorilla/context#Get": "Get(*http.Request,interface{}) interface{}",
    "github.com/gorilla/context#Set": "Set(*http.Request,interface{},interface{})"
  },
  "InitMd5": ""
}
